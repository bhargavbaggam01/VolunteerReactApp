{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/react-app/my-app/src/app/analytics/analytics-graph.tsx"],"sourcesContent":["'use client';\r\nimport React from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  PointElement,\r\n  LineElement,\r\n  Tooltip,\r\n  Legend,\r\n  Title,\r\n  Filler,\r\n  BarController,\r\n  LineController,\r\n} from 'chart.js';\r\nimport { Chart } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  PointElement,\r\n  LineElement,\r\n  Tooltip,\r\n  Legend,\r\n  Title,\r\n  Filler,\r\n  BarController,\r\n  LineController\r\n);\r\n\r\nconst labels = Array.from({ length: 30 }, (_, i) => `Day ${i + 1}`);\r\nconst newUsersData = [\r\n  12, 19, 15, 25, 30, 38, 45, 32, 28, 40, 55, 60, 50, 48, 52, 70, 75, 65,\r\n  58, 62, 80, 85, 90, 78, 72, 68, 88, 95, 105, 100,\r\n];\r\n\r\nconst movingAverage = (data: number[], windowSize: number) => {\r\n  const result = [];\r\n  for (let i = 0; i < data.length; i++) {\r\n    if (i < windowSize - 1) {\r\n      result.push(null);\r\n    } else {\r\n      const window = data.slice(i - windowSize + 1, i + 1);\r\n      const average = window.reduce((a, b) => a + b, 0) / windowSize;\r\n      result.push(average);\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\nconst movingAverageData = movingAverage(newUsersData, 7);\r\n\r\nconst data = {\r\n  labels,\r\n  datasets: [\r\n    {\r\n      type: 'line' as const,\r\n      label: '7-Day Moving Average',\r\n      data: movingAverageData,\r\n      borderColor: 'rgb(255, 99, 132)',\r\n      backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n      borderWidth: 2,\r\n      fill: true,\r\n      tension: 0.4,\r\n      yAxisID: 'y',\r\n    },\r\n    {\r\n      type: 'bar' as const,\r\n      label: 'New Users',\r\n      data: newUsersData,\r\n      backgroundColor: 'rgba(54, 162, 235, 0.6)',\r\n      borderColor: 'rgba(54, 162, 235, 1)',\r\n      borderWidth: 1,\r\n      borderRadius: 5,\r\n      yAxisID: 'y',\r\n    },\r\n  ],\r\n};\r\n\r\nconst options = {\r\n  responsive: true,\r\n  plugins: {\r\n    title: {\r\n      display: true,\r\n      text: '30-Day New User Growth and Trend',\r\n      font: {\r\n        size: 20,\r\n      },\r\n    },\r\n    legend: {\r\n      position: 'top' as const,\r\n    },\r\n  },\r\n  scales: {\r\n    y: {\r\n      beginAtZero: true,\r\n      grid: {\r\n        color: 'rgba(200, 200, 200, 0.2)',\r\n      },\r\n    },\r\n    x: {\r\n      grid: {\r\n        display: false,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst MonthlyTrendChart = () => {\r\n  return (\r\n    <div className=\"p-4 bg-white shadow-lg rounded-lg\" style={{ maxWidth: '1000px', margin: '2rem auto' }}>\r\n      <Chart type='bar' data={data} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthlyTrendChart;\r\n"],"names":[],"mappings":";;;;AAEA;AAcA;AAhBA;;;;AAkBA,+JAAA,CAAA,QAAO,CAAC,QAAQ,CACd,+JAAA,CAAA,gBAAa,EACb,+JAAA,CAAA,cAAW,EACX,+JAAA,CAAA,aAAU,EACV,+JAAA,CAAA,eAAY,EACZ,+JAAA,CAAA,cAAW,EACX,+JAAA,CAAA,UAAO,EACP,+JAAA,CAAA,SAAM,EACN,+JAAA,CAAA,QAAK,EACL,+JAAA,CAAA,SAAM,EACN,+JAAA,CAAA,gBAAa,EACb,+JAAA,CAAA,iBAAc;AAGhB,MAAM,SAAS,MAAM,IAAI,CAAC;IAAE,QAAQ;AAAG,GAAG,CAAC,GAAG,IAAM,CAAC,IAAI,EAAE,IAAI,GAAG;AAClE,MAAM,eAAe;IACnB;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IACpE;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAK;CAC9C;AAED,MAAM,gBAAgB,CAAC,MAAgB;IACrC,MAAM,SAAS,EAAE;IACjB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,MAAM,EAAE,IAAK;QACpC,IAAI,IAAI,aAAa,GAAG;YACtB,OAAO,IAAI,CAAC;QACd,OAAO;YACL,MAAM,SAAS,KAAK,KAAK,CAAC,IAAI,aAAa,GAAG,IAAI;YAClD,MAAM,UAAU,OAAO,MAAM,CAAC,CAAC,GAAG,IAAM,IAAI,GAAG,KAAK;YACpD,OAAO,IAAI,CAAC;QACd;IACF;IACA,OAAO;AACT;AAEA,MAAM,oBAAoB,cAAc,cAAc;AAEtD,MAAM,OAAO;IACX;IACA,UAAU;QACR;YACE,MAAM;YACN,OAAO;YACP,MAAM;YACN,aAAa;YACb,iBAAiB;YACjB,aAAa;YACb,MAAM;YACN,SAAS;YACT,SAAS;QACX;QACA;YACE,MAAM;YACN,OAAO;YACP,MAAM;YACN,iBAAiB;YACjB,aAAa;YACb,aAAa;YACb,cAAc;YACd,SAAS;QACX;KACD;AACH;AAEA,MAAM,UAAU;IACd,YAAY;IACZ,SAAS;QACP,OAAO;YACL,SAAS;YACT,MAAM;YACN,MAAM;gBACJ,MAAM;YACR;QACF;QACA,QAAQ;YACN,UAAU;QACZ;IACF;IACA,QAAQ;QACN,GAAG;YACD,aAAa;YACb,MAAM;gBACJ,OAAO;YACT;QACF;QACA,GAAG;YACD,MAAM;gBACJ,SAAS;YACX;QACF;IACF;AACF;AAEA,MAAM,oBAAoB;IACxB,qBACE,6LAAC;QAAI,WAAU;QAAoC,OAAO;YAAE,UAAU;YAAU,QAAQ;QAAY;kBAClG,cAAA,6LAAC,yJAAA,CAAA,QAAK;YAAC,MAAK;YAAM,MAAM;YAAM,SAAS;;;;;;;;;;;AAG7C;KANM;uCAQS","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///D:/react-app/my-app/src/app/analytics/weely-subs.tsx"],"sourcesContent":["'use client';\r\nimport React from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Tooltip,\r\n  Legend,\r\n  Title,\r\n} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\n// Register components\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Tooltip, Legend, Title);\r\n\r\nconst labels = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\r\n\r\nconst data = {\r\n  labels,\r\n  datasets: [\r\n    {\r\n      label: 'New Subscriptions',\r\n      data: [65, 59, 80, 81, 56, 55, 40],\r\n      backgroundColor: 'rgba(75, 192, 192, 0.7)',\r\n      borderColor: 'rgba(75, 192, 192, 1)',\r\n      borderWidth: 1,\r\n      borderRadius: 5,\r\n    },\r\n    {\r\n      label: 'Cancellations',\r\n      data: [12, 19, 3, 5, 2, 3, 7],\r\n      backgroundColor: 'rgba(255, 99, 132, 0.7)',\r\n      borderColor: 'rgba(255, 99, 132, 1)',\r\n      borderWidth: 1,\r\n      borderRadius: 5,\r\n    },\r\n  ],\r\n};\r\n\r\nconst options = {\r\n  responsive: true,\r\n  plugins: {\r\n    title: {\r\n      display: true,\r\n      text: 'Weekly Subscriptions vs Cancellations',\r\n      font: {\r\n        size: 20,\r\n        weight: 'bold' as const,\r\n      },\r\n      padding: {\r\n        bottom: 20,\r\n      }\r\n    },\r\n    legend: {\r\n      position: 'top' as const,\r\n    },\r\n  },\r\n  scales: {\r\n    y: {\r\n      beginAtZero: true,\r\n      grid: {\r\n        color: 'rgba(200, 200, 200, 0.2)',\r\n      },\r\n    },\r\n    x: {\r\n      grid: {\r\n        display: false,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst WeeklyAnalysisChart = () => {\r\n  return (\r\n    <div className=\"p-4 bg-white shadow-lg rounded-lg\" style={{ maxWidth: '800px', margin: 'auto' }}>\r\n      <Bar data={data} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeeklyAnalysisChart;\r\n"],"names":[],"mappings":";;;;AAEA;AASA;AAXA;;;;AAaA,sBAAsB;AACtB,+JAAA,CAAA,QAAO,CAAC,QAAQ,CAAC,+JAAA,CAAA,gBAAa,EAAE,+JAAA,CAAA,cAAW,EAAE,+JAAA,CAAA,aAAU,EAAE,+JAAA,CAAA,UAAO,EAAE,+JAAA,CAAA,SAAM,EAAE,+JAAA,CAAA,QAAK;AAE/E,MAAM,SAAS;IAAC;IAAO;IAAO;IAAO;IAAO;IAAO;IAAO;CAAM;AAEhE,MAAM,OAAO;IACX;IACA,UAAU;QACR;YACE,OAAO;YACP,MAAM;gBAAC;gBAAI;gBAAI;gBAAI;gBAAI;gBAAI;gBAAI;aAAG;YAClC,iBAAiB;YACjB,aAAa;YACb,aAAa;YACb,cAAc;QAChB;QACA;YACE,OAAO;YACP,MAAM;gBAAC;gBAAI;gBAAI;gBAAG;gBAAG;gBAAG;gBAAG;aAAE;YAC7B,iBAAiB;YACjB,aAAa;YACb,aAAa;YACb,cAAc;QAChB;KACD;AACH;AAEA,MAAM,UAAU;IACd,YAAY;IACZ,SAAS;QACP,OAAO;YACL,SAAS;YACT,MAAM;YACN,MAAM;gBACJ,MAAM;gBACN,QAAQ;YACV;YACA,SAAS;gBACP,QAAQ;YACV;QACF;QACA,QAAQ;YACN,UAAU;QACZ;IACF;IACA,QAAQ;QACN,GAAG;YACD,aAAa;YACb,MAAM;gBACJ,OAAO;YACT;QACF;QACA,GAAG;YACD,MAAM;gBACJ,SAAS;YACX;QACF;IACF;AACF;AAEA,MAAM,sBAAsB;IAC1B,qBACE,6LAAC;QAAI,WAAU;QAAoC,OAAO;YAAE,UAAU;YAAS,QAAQ;QAAO;kBAC5F,cAAA,6LAAC,yJAAA,CAAA,MAAG;YAAC,MAAM;YAAM,SAAS;;;;;;;;;;;AAGhC;KANM;uCAQS","debugId":null}}]
}